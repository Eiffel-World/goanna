system

	bachelor

root

	APPLICATION: "make"

default

	console_application (yes)
	assertion (no)

cluster

	root_cluster: "${GOANNA}/examples/bachelor"
	root_cluster_application (root_cluster): "$/application"
	root_cluster_application_content_container (root_cluster_application): "$/content_container"
	root_cluster_application_content_container_form_elements (root_cluster_application_content_container): "$/form_elements"
	root_cluster_application_content_container_Forms (root_cluster_application_content_container): "$/Forms"
	root_cluster_application_data (root_cluster_application): "$/data"
	root_cluster_application_domain (root_cluster_application): "$/domain"
	root_cluster_application_page_sequence_elements (root_cluster_application): "$/page_sequence_elements"
	root_cluster_application_topic (root_cluster_application): "$/topic"
	root_cluster_application_unique_string_sequence (root_cluster_application): "$/unique_string_sequence"
	root_cluster_application_user (root_cluster_application): "$/user"
	kernel: "${GOBO}/library/kernel"
	kernel_elks (kernel): "$/elks"
	kernel_io (kernel): "$/io"
	kernel_misc (kernel): "$/misc"
	kernel_unicode (kernel): "$/unicode"
	kernel_support (kernel): "$/support"
	kernel_spec_compiler: "${GOBO}/library/kernel/spec/ise"
	lexical: "${GOBO}/library/lexical"
	lexical_automaton (lexical): "$/automaton"
	lexical_error (lexical): "$/error"
	lexical_generation (lexical): "$/generation"
	lexical_lex (lexical): "$/lex"
	lexical_regexp (lexical): "$/regexp"
	lexical_scanner (lexical): "$/scanner"
	lexical_skeleton (lexical): "$/skeleton"
	lexical_support (lexical): "$/support"
	parse: "${GOBO}/library/parse"
	parse_error (parse): "$/error"
	parse_fsm (parse): "$/fsm"
	parse_generation (parse): "$/generation"
	parse_grammar (parse): "$/grammar"
	parse_parser (parse): "$/parser"
	parse_skeleton (parse): "$/skeleton"
	parse_support (parse): "$/support"
	parse_yacc (parse): "$/yacc"
	pattern: "${GOBO}/library/pattern"
	pattern_command (pattern): "$/command"
	pattern_bridge (pattern): "$/bridge"
	structure: "${GOBO}/library/structure"
	structure_container (structure): "$/container"
	structure_dispenser (structure): "$/dispenser"
	structure_list (structure): "$/list"
	structure_set (structure): "$/set"
	structure_sort (structure): "$/sort"
	structure_support (structure): "$/support"
	structure_table (structure): "$/table"
	test: "${GOBO}/library/test"
	test_generation (test): "$/generation"
	test_harness (test): "$/harness"
	time: "${GOBO}/library/time"
	time_clock (time): "$/clock"
	time_date (time): "$/date"
	time_time_zone (time): "$/time_zone"
	tools: "${GOBO}/library/tools"
	tools_eiffel (tools): "$/eiffel"
	tools_eiffel_ast (tools_eiffel): "$/ast"
	tools_eiffel_ast_assertion (tools_eiffel_ast): "$/assertion"
	tools_eiffel_ast_class (tools_eiffel_ast): "$/class"
	tools_eiffel_ast_constant (tools_eiffel_ast): "$/constant"
	tools_eiffel_ast_expression (tools_eiffel_ast): "$/expression"
	tools_eiffel_ast_feature (tools_eiffel_ast): "$/feature"
	tools_eiffel_ast_instruction (tools_eiffel_ast): "$/instruction"
	tools_eiffel_ast_lace (tools_eiffel_ast): "$/lace"
	tools_eiffel_ast_name (tools_eiffel_ast): "$/name"
	tools_eiffel_ast_type (tools_eiffel_ast): "$/type"
	tools_eiffel_error (tools_eiffel): "$/error"
	tools_eiffel_parser (tools_eiffel): "$/parser"
	tools_lace (tools): "$/lace"
	tools_lace_ast (tools_lace): "$/ast"
	tools_lace_error (tools_lace): "$/error"
	tools_lace_parser (tools_lace): "$/parser"
	tools_xace (tools): "$/xace"
	tools_xace_ast (tools_xace): "$/ast"
	tools_xace_error (tools_xace): "$/error"
	tools_xace_generator (tools_xace): "$/generator"
	tools_xace_parser (tools_xace): "$/parser"
	tools_xace_support (tools_xace): "$/support"
	utility: "${GOBO}/library/utility"
	utility_error (utility): "$/error"
	utility_formatter (utility): "$/formatter"
	utility_command (utility): "$/command"
	utility_support (utility): "$/support"
	xml: "${GOBO}/library/xml"
	xml_factory (xml): "$/factory"
	xml_position (xml): "$/position"
	xml_source (xml): "$/source"
	xml_general (xml): "$/general"
	xml_event (xml): "$/event"
	xml_tree (xml): "$/tree"
	xml_formatter (xml): "$/formatter"
	xml_impl (xml): "$/impl"
	xml_impl_interface (xml_impl): "$/interface"
	xml_impl_interface_general (xml_impl_interface): "$/general"
	xml_impl_interface_event (xml_impl_interface): "$/event"
	xml_impl_interface_tree (xml_impl_interface): "$/tree"
	xml_impl_eiffel (xml_impl): "$/eiffel"
	xml_impl_eiffel_event (xml_impl_eiffel): "$/event"
	xml_impl_tree_on_event (xml_impl): "$/tree_on_event"
	xml_impl_tree_on_event_tree (xml_impl_tree_on_event): "$/tree"
	xml_impl_no_expat (xml_impl): "$/no_expat"
	xml_impl_no_expat_event (xml_impl_no_expat): "$/event"
	kernel_ise: "${ISE_EIFFEL}/library"
	kernel_ise_base (kernel_ise): "$/base"
	kernel_ise_base_kernel (kernel_ise_base): "$/kernel"
	kernel_ise_base_support (kernel_ise_base): "$/support"
	kernel_ise_base_structures (kernel_ise_base): "$/structures"
	kernel_ise_base_structures_access (kernel_ise_base_structures): "$/access"
	kernel_ise_base_structures_cursors (kernel_ise_base_structures): "$/cursors"
	kernel_ise_base_structures_cursor_tree (kernel_ise_base_structures): "$/cursor_tree"
	kernel_ise_base_structures_dispenser (kernel_ise_base_structures): "$/dispenser"
	kernel_ise_base_structures_iteration (kernel_ise_base_structures): "$/iteration"
	kernel_ise_base_structures_list (kernel_ise_base_structures): "$/list"
	kernel_ise_base_structures_set (kernel_ise_base_structures): "$/set"
	kernel_ise_base_structures_set_strategies (kernel_ise_base_structures_set): "$/strategies"
	kernel_ise_base_structures_sort (kernel_ise_base_structures): "$/sort"
	kernel_ise_base_structures_storage (kernel_ise_base_structures): "$/storage"
	kernel_ise_base_structures_table (kernel_ise_base_structures): "$/table"
	kernel_ise_base_structures_traversing (kernel_ise_base_structures): "$/traversing"
	kernel_ise_base_structures_tree (kernel_ise_base_structures): "$/tree"
	webservices: "${GOANNA}/library/webservices"
	webservices_services (webservices): "$/services"
	servlet: "${GOANNA}/library/webservices/servlet"
	servlet_http (servlet): "$/http"
	servlet_servlets (servlet): "$/servlets"
	servlet_servlets_content_handlers (servlet_servlets): "$/content_handlers"
	dom: "${GOANNA}/library/webservices/models/dom"
	dom_core (dom): "$/core"
	dom_traversal_range (dom): "$/traversal_range"
	dom_writer (dom): "$/writer"
	dom_parser (dom): "$/parser"
	dom_impl (dom): "$/impl"
	dom_impl_core (dom_impl): "$/core"
	dom_impl_traversal_range (dom_impl): "$/traversal_range"
	dom_impl_xmle_doc (dom_impl): "$/xmle_doc"
	soap: "${GOANNA}/library/webservices/protocols/soap"
	soap_encoding (soap): "$/encoding"
	soap_server (soap): "$/server"
	soap_server_servlet (soap_server): "$/servlet"
	soap_utility (soap): "$/utility"
	xmlrpc: "${GOANNA}/library/webservices/protocols/xmlrpc"
	xmlrpc_client (xmlrpc): "$/client"
	xmlrpc_server (xmlrpc): "$/server"
	xmlrpc_server_servlet (xmlrpc_server): "$/servlet"
	cgi: "${GOANNA}/library/webservices/connectors/cgi"
	fast_cgi: "${GOANNA}/library/webservices/connectors/fast_cgi"
	fast_cgi_protocol (fast_cgi): "$/protocol"
	stand_alone: "${GOANNA}/library/webservices/connectors/stand_alone"
	goanna_utility: "${GOANNA}/library/utility"
	goanna_utility_spec_compiler: "${GOANNA}/library/utility/spec/ise"
	log4e: "${GOANNA}/library/utility/log4e"
	log4e_appenders (log4e): "$/appenders"
	log4e_appenders_net (log4e_appenders): "$/net"
	log4e_config (log4e): "$/config"
	log4e_filters (log4e): "$/filters"
	log4e_helpers (log4e): "$/helpers"
	log4e_layouts (log4e): "$/layouts"
	log4e_layouts_pattern (log4e_layouts): "$/pattern"
	codegen: "${GOANNA}/library/utility/codegen"

end
