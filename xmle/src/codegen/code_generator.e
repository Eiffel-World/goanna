indexing

	description: "Eiffel code generator for DOM structuros"
	author: "Glenn Maughan"
	date: "$Date$"
	revision: "$Revision$"

class CODE_GENERATOR

creation

	make

feature -- Initialisation

	make (name: STRING; destination: STRING) is
			-- Create a new code generator to produce Eiffel code
			-- on 'destination.
		require
			name_exists: name /= Void
			destination_exists: destination/= Void
		do
			doc_name := name
			doc_name.to_upper
			create {PLAIN_TEXT_FILE} dest.make_open_write (destination)
		end

feature -- Generation

	generate (doc: DOM_DOCUMENT) is
			-- Create an Eiffel class to represent 'doc'
		require
			doc_exists: doc /= Void
		do
			document := doc
			output_indexing_clause
			output_class_header
			output_inheritance_clause
			output_creation_routines
			output_build_document_routine
			output_class_end
			dest.close
		end

feature {NONE} -- Implementation

	Xmle_class_name_extension: STRING is "_XMLE"

	doc_name: STRING
			-- Name of document

	dest: IO_MEDIUM
			-- Output medium to generate code to.

	document: DOM_DOCUMENT
			-- The document to produce

	eiffel_code: EIFFEL_CLASS
			-- The Eiffel code representation.

	attr: EIFFEL_ATTRIBUTE
	routine: EIFFEL_ROUTINE

	output_indexing_clause is
			-- Generate indexing clause
		do
			dest.put_string ("indexing")
			dest.put_new_line
			dest.put_string ("%Tdescription: %"XMLE class for document " + doc_name + "%"")
			dest.put_new_line
			dest.put_string ("%Twarning: %"******Do not edit, automatically generated by XMLE******%"")
			dest.put_new_line
			dest.put_new_line
		end

	output_class_header is
			-- Generate a class header for the document
		do
			dest.put_string ("class " + doc_name + Xmle_class_name_extension)
			dest.put_new_line
			dest.put_new_line
		end

	output_inheritance_clause is
			-- Output inheritance clause
		do
		end

	output_creation_routines is
			-- Output creation clause and creation routines
		do
			dest.put_string ("creation")
			dest.put_new_line
			dest.put_string ("%Tmake")
			dest.put_new_line
			dest.put_new_line
			-- build make procedure
			output_feature_break ("Initialisation")
			dest.put_string ("%Tmake is")
			dest.put_new_line
			dest.put_string ("%T%T%T-- Create new instance of " + doc_name + " document")
			dest.put_new_line
			dest.put_string ("%T%Tdo")
			dest.put_new_line
			dest.put_string ("%T%T%Tbuild_document")
			dest.put_new_line
			dest.put_string ("%T%Tend")
			dest.put_new_line
			dest.put_new_line
		end
	
	output_feature_break (break_comment: STRING) is
			-- Output feature break with 'break_comment' following two dashes ('--')
		require
			break_comment_exists: break_comment /= Void
		do
			dest.put_string ("feature --" + break_comment)
			dest.put_new_line
			dest.put_new_line
		end

	output_build_document_routine is
			-- Output the build document routine
		do
		end	

	output_class_end is
			-- Output closing class clause
		do
			dest.put_string ("end -- class " + doc_name + Xmle_class_name_extension)
		end

end -- class CODE_GENERATOR

