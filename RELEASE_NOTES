Project Goanna Release Notes
----------------------------

Release 0.2
-----------
4 Feb 2001

o Added argument checking to simple_fast_cgi example.

o Added support for cookies and sessions to servlet library.

o Goanna FastCGI now compiles and executes correctly under SmallEiffel.
A new class STRING_MANIPULATION was needed to encapsulate different string
handling between ISE and SmallEiffel. ELKS2000 will hopefully fix this when
it is supported in all compilers.

o Changed all keywords 'create' to 'creation' for SmallEiffel compliance.

o Started to port all Goanna libraries to SmallEiffel but stopped because
too much work is involved. Will wait until SmallEiffel is ELKS2000 compliant.

o Added datetime cluster for simple date and timestamp handling.

o Added compiler specific utility classes to help port to SmallEiffel.

o Added Base64 encoder utility class.

Release 0.1 (Proof-of-Concept)
------------------------------
6 Jan 2001

The first public release of Project Goanna includes enough implemented
functionality to demonstrate the capabilities of the technology. The classes
included with the release have many skeleton code fragments and require
further development before they will become more widely useful.

The following known bugs and issues need to be resolved:

o The project has only been tested under Windows using ISE Eiffel. Due
to a few bugs in SmallEiffel and lack of support for creation expressions, 
the source has not yet been ported. Further development will occur on 
both Linux and Windows (just as soon as I update my Linux compiler --GM).

o The Apache mod_fastcgi module has a few problems. Especially under
Windows. 

o Error handling is not performed in all areas. Integration with a standard
error handling mechanism (eg, EEL) needs to be done.

o The DOM interface utilises assertions to remove the need for exception 
handling. The implementation therefore does not conform to the standard
exactly. However, it does simplify the API. (I believe this is the right
decision, but time will tell. -- GM).

o The DS_HASH_TABLE class is used in a number of areas to handle named
collections. The hash table implementation is a little heavy weight for some
of the areas it has been used. In particular, as the implementation for
DOM_NAMED_NODE_LIST. A more light-weight associative array could be used in
these cases.


